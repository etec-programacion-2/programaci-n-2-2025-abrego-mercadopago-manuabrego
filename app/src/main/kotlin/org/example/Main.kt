package org.example

import org.example.database.DatabaseConnection
import org.example.database.DatabaseUtils
import org.example.ui.MenuPrincipal
import org.example.util.Logger

fun main() {
    Logger.info("=== INICIANDO APLICACION ===")
    println("üè¶ Iniciando Billetera Virtual...")
    
    try {
        Logger.debug("Verificando salud de la base de datos...")
        
        // Verificar que la base de datos est√© funcionando
        if (!DatabaseUtils.checkDatabaseHealth()) {
            Logger.error("La base de datos no est√° disponible")
            println("‚ùå Error: La base de datos no est√° disponible")
            println("üí° Ejecuta primero: ./setup_db.sh")
            return
        }
        
        Logger.info("Base de datos conectada correctamente")
        println("‚úÖ Base de datos conectada correctamente\n")
        
        Logger.debug("Iniciando MenuPrincipal...")
        
        // Iniciar el men√∫ principal
        val menu = MenuPrincipal()
        Logger.debug("MenuPrincipal creado, llamando a iniciar()...")
        menu.iniciar()
        
        Logger.info("MenuPrincipal finalizado correctamente")
        
    } catch (e: OutOfMemoryError) {
        Logger.error("OutOfMemoryError detectado!", e)
        println("\n‚ùå ERROR: Se qued√≥ sin memoria")
        println("Posible loop infinito detectado")
        e.printStackTrace()
    } catch (e: Exception) {
        Logger.error("Error cr√≠tico en main", e)
        println("‚ùå Error cr√≠tico: ${e.message}")
        e.printStackTrace()
    } finally {
        Logger.debug("Cerrando conexi√≥n a base de datos...")
        DatabaseConnection.closeConnection()
        Logger.info("=== APLICACION FINALIZADA ===")
    }
}